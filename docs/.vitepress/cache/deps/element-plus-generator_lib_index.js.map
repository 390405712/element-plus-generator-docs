{
  "version": 3,
  "sources": ["../../../../../element-plus-generator-demo/node_modules/element-plus-generator/lib/TableGenerator.tsx", "../../../../../element-plus-generator-demo/node_modules/element-plus-generator/lib/FormGenerator.tsx", "../../../../../element-plus-generator-demo/node_modules/element-plus-generator/lib/StepsGenerator.tsx", "../../../../../element-plus-generator-demo/node_modules/element-plus-generator/lib/utils.ts", "../../../../../element-plus-generator-demo/node_modules/element-plus-generator/lib/index.ts"],
  "sourcesContent": ["import { ElTable, ElTableColumn, ElEmpty, ElLoading } from 'element-plus'\r\nimport { ref, watch, defineComponent, nextTick } from 'vue';\r\nimport type { TableAttrs, TableOption, RefTableGeneratorObj } from './type.d'\r\n\r\nexport default defineComponent({\r\n  name: 'TableGenerator',\r\n  setup(props, { expose, attrs, slots, emit }) {\r\n    const RefTableGenerator = ref<RefTableGeneratorObj>()\r\n    const _attrs = attrs as TableAttrs\r\n    let loading: any\r\n    let el = new Date().getTime()\r\n    let show = ref(false)\r\n    let width = ref<number | 'auto'>(0)\r\n    watch(() => _attrs.loading, (val) => {\r\n      if (val) {\r\n        nextTick(() => {\r\n          loading = ElLoading.service({\r\n            target: `.el-table-${el}`\r\n          })\r\n        })\r\n      } else {\r\n        loading?.close()\r\n      }\r\n    }, {\r\n      immediate: true,\r\n    })\r\n\r\n    watch(() => _attrs.data, (val) => {\r\n      if (!slots?.operation || val.length === 0) return show.value = true\r\n      show.value = false\r\n      nextTick(() => {\r\n        let w = 0\r\n        document.querySelectorAll<HTMLDivElement>('.content-wrapper-width').forEach((i) => {\r\n          if (i.offsetWidth > w) w = i.offsetWidth\r\n        })\r\n        width.value = w > 0 ? w + 32 : 'auto'\r\n        show.value = true\r\n      })\r\n    }, {\r\n      immediate: true,\r\n    })\r\n\r\n    expose(() => (RefTableGenerator.value))\r\n\r\n    return () => {\r\n      // function renderIndexColumn() {\r\n      //   return <ElTableColumn type=\"index\" fixed=\"left\" align=\"left\" width=\"60\" label=\"序号\"></ElTableColumn>\r\n      // }\r\n      // function renderSelectionColumn() {\r\n      //   return <ElTableColumn type=\"selection\" fixed=\"left\" width=\"60\"></ElTableColumn>\r\n      // }\r\n      function renderColumn(tableOption: TableOption[]) {\r\n        return tableOption.map((item) => {\r\n          if (['selection', 'index', 'expand'].includes(item.type!)) {\r\n            return <ElTableColumn type={item.type} {...item} v-slots={{ ...item?.slots }} />\r\n          }\r\n          return <ElTableColumn\r\n            show-overflow-tooltip={true}\r\n            align=\"left\"\r\n            {...item}\r\n            v-slots={{\r\n              default: (scope: { $index: number, row: Record<string, any> }) =>\r\n                item.children && Array.isArray(item.children) && item.children.length > 0\r\n                  ? renderColumn(item.children)\r\n                  : (\r\n                    slots[item.prop!]\r\n                      // ? <>{slots[item.prop]?.({ $index: scope.$index, row: scope.row,column:scope.column,store:scope.store })}</>\r\n                      ? <>{slots[item.prop!]?.({ $index: scope.$index, row: scope.row })}</>\r\n                      : (\r\n                        item.formatter\r\n                          ? <>{item.formatter({ $index: scope.$index, row: scope.row }) ?? '-'}</>\r\n                          : <>{scope.row[item.prop!] ?? '-'}</>\r\n                      )\r\n                  ),\r\n              ...item?.slots\r\n            }}\r\n          >\r\n          </ElTableColumn>\r\n        })\r\n      }\r\n      function renderTable() {\r\n        return (\r\n          <ElTable\r\n            ref={RefTableGenerator}\r\n            stripe={true}\r\n            {..._attrs}\r\n            class={`TableGenerator el-table-${el}`}\r\n            v-slots={{\r\n              empty: () => slots?.empty\r\n                ? slots?.empty()\r\n                : <ElEmpty description=\"暂无数据\" />,\r\n              append: () => slots?.append\r\n                ? slots?.append()\r\n                : ''\r\n            }}\r\n          >\r\n            {/* {_attrs.onSelectionChange ? renderSelectionColumn() : ''} */}\r\n            {/* {_attrs.showIndex === false ? '' : renderIndexColumn()} */}\r\n            {renderColumn(_attrs.tableOption)}\r\n            {slots?.operation ? <ElTableColumn fixed=\"right\" label=\"操作\"\r\n              width={width.value}\r\n              v-slots={{\r\n                default: (scope: { $index: number, row: Record<string, any> }) => <div class='content-wrapper'>{slots.operation?.({ $index: scope.$index, row: scope.row })}</div>\r\n              }}\r\n            /> : ''}\r\n          </ElTable>\r\n        )\r\n      }\r\n      function renderOriginTable() {\r\n        return (\r\n          <ElTable\r\n            {...attrs}\r\n            class={`TableGenerator el-table-${el}`}\r\n          >\r\n            {/* {_attrs.onSelectionChange ? renderSelectionColumn() : ''} */}\r\n            {/* {_attrs.showIndex === false ? '' : renderIndexColumn()} */}\r\n            <ElTableColumn fixed=\"right\"\r\n              v-slots={{\r\n                default: (scope: { $index: number, row: Record<string, any> }) => <div style=\"display:inline-block;opacity:0\" class='content-wrapper content-wrapper-width'>{slots.operation?.({ $index: scope.$index, row: scope.row })}</div>\r\n              }}\r\n            />\r\n          </ElTable>\r\n        )\r\n      }\r\n      return (\r\n        <>{show.value ? renderTable() : renderOriginTable()}</>\r\n      )\r\n    }\r\n  }\r\n})", "import { ElButton, ElForm, ElFormItem, ElInput, ElInputNumber, ElSelect, ElOption, ElRadioGroup, ElRadio, ElRadioButton, ElCheckboxGroup, ElCheckbox, ElCheckboxButton, ElDatePicker, ElTimePicker, ElSwitch, ElUpload, ElTreeSelect, ElCascader } from 'element-plus'\r\nimport { Search, Refresh, ArrowUp } from '@element-plus/icons-vue'\r\nimport { defineComponent, ref } from 'vue'\r\nimport type { Ref } from 'vue'\r\nimport type { FormAttrs, RefFormGenerator, RefFormGeneratorObj, FormOption } from './type.d'\r\nimport type { Expose } from './element-plus'\r\n\r\nexport default defineComponent({\r\n  name: 'FormGenerator',\r\n  setup(props, { expose, attrs, slots, emit }) {\r\n    const _attrs = attrs as FormAttrs\r\n    const RefFormGenerator = ref<RefFormGeneratorObj>()\r\n    const $refs: Record<string, Ref<Expose | undefined>> = {}\r\n    const more = ref(false)\r\n    const column = (!isNaN(_attrs.column!) ? (_attrs.column! >= 4 ? _attrs.column : 4) : 4) as number\r\n    const form: Pick<RefFormGeneratorObj, 'submit' | 'reset'> = {\r\n      submit: () => {\r\n        RefFormGenerator.value!.validate((isValid) => {\r\n          if (isValid) emit('submit')\r\n        })\r\n      },\r\n      reset: () => {\r\n        RefFormGenerator.value!.resetFields()\r\n        emit('submit', 'init')\r\n      }\r\n    }\r\n\r\n    function setShow(bool: boolean) {\r\n      more.value = bool\r\n      _attrs.formOption.forEach((i, index) => {\r\n        if (index > column - 2) i.show = bool\r\n      })\r\n    }\r\n\r\n    if (_attrs.formOption.length >= (column - 2) && _attrs?.type === 'search') setShow(false)\r\n\r\n    expose(() => ({ ...RefFormGenerator.value, ...form, $refs }))\r\n\r\n    return () => {\r\n      function renderForm() {\r\n        return (\r\n          <ElForm class={`FormGenerator ${_attrs?.type === 'search' ? 'FormGeneratorSearch' : ''} ${_attrs?.type === 'dialog' ? 'FormGeneratorDialog' : ''}`} inline={_attrs?.type === 'search' ? true : false} validate-on-rule-change={false} label-width={_attrs.labelWidth || 'auto'} {..._attrs} ref={RefFormGenerator} >\r\n            {_attrs.formOption.map((formOption) => {\r\n              if (!(formOption.hasOwnProperty('show') && formOption.show === false)) return <ElFormItem {...formOption.formItem} key={formOption.formItem.prop}>{renderControl(formOption)}</ElFormItem>\r\n            })}\r\n            {_attrs.disabled === true || _attrs.noFooter || !_attrs.onSubmit\r\n              ? ''\r\n              : <ElFormItem\r\n                class={`btnItem ${more.value ? \"searchItem\" : \"\"}`}\r\n                v-slots={{\r\n                  default: () => slots?.default\r\n                    ? <>{slots.default()[0].children}</>\r\n                    : _attrs?.type === 'search'\r\n                      ? renderSearchItem()\r\n                      : <>\r\n                        {\r\n                          _attrs?.type === 'dialog'\r\n                            ? <ElButton onClick={(e: Event) => {\r\n                              function getDialogEl(el: HTMLElement): HTMLElement {\r\n                                if (!el.parentElement!.classList.value.split(' ').includes('el-dialog')) return getDialogEl(el.parentElement as HTMLDivElement)\r\n                                return el.parentElement!\r\n                              }\r\n                              getDialogEl(e.target as HTMLElement).querySelector<HTMLElement>('.el-dialog__headerbtn')!?.click?.()\r\n                            }}>取消</ElButton>\r\n                            : ''\r\n                        }\r\n                        <ElButton type=\"primary\" onClick={form.submit}>确定</ElButton>\r\n                      </>,\r\n                  label: () => ''\r\n                }}\r\n              />\r\n            }\r\n          </ElForm >\r\n        )\r\n      }\r\n      function renderControl(formOption: FormOption) {\r\n        $refs[formOption.formItem.prop] = ref()\r\n        switch (formOption.type) {\r\n          case 'input':\r\n            return <ElInput ref={$refs[formOption.formItem.prop]} clearable={true} maxlength={30} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} v-slots={{ ...formOption?.control?.slots }} />\r\n            break;\r\n          case 'input-number':\r\n            return <ElInputNumber ref={$refs[formOption.formItem.prop]} min={0} max={100} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} />\r\n            break;\r\n          case 'select':\r\n            return <ElSelect ref={$refs[formOption.formItem.prop]} clearable={true} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} >\r\n              {formOption?.control?.option instanceof Array ? formOption?.control?.option.map((controlOptionItem) => (\r\n                <ElOption {...controlOptionItem} v-slots={{ ...controlOptionItem?.slots }} key={controlOptionItem.value} />\r\n              )) : ''}\r\n            </ElSelect>\r\n            break;\r\n          case 'tree-select':\r\n            return <ElTreeSelect ref={$refs[formOption.formItem.prop]} clearable={true} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} v-slots={{ ...formOption?.control?.slots }}></ElTreeSelect>\r\n            break;\r\n          case 'cascader':\r\n            return <ElCascader ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} v-slots={{ ...formOption?.control?.slots }}></ElCascader>\r\n            break;\r\n          case 'radio':\r\n            return (\r\n              <ElRadioGroup ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]}>\r\n                {formOption?.control?.radioGroup instanceof Array ? formOption?.control?.radioGroup!.map((controlOptionItem) => (\r\n                  <ElRadio {...controlOptionItem} label={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} key={controlOptionItem.label} >{controlOptionItem.label}</ElRadio>\r\n                )) : ''}\r\n              </ElRadioGroup>\r\n            )\r\n            break;\r\n          case 'radio-button':\r\n            return (\r\n              <ElRadioGroup ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]}>\r\n                {formOption?.control?.radioGroup instanceof Array ? formOption?.control?.radioGroup!.map((controlOptionItem) => (\r\n                  <ElRadioButton {...controlOptionItem} label={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} key={controlOptionItem.label} >{controlOptionItem.label}</ElRadioButton>\r\n                )) : ''}\r\n              </ElRadioGroup>\r\n            )\r\n            break;\r\n          case 'checkbox':\r\n            return (\r\n              <ElCheckboxGroup ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]}>\r\n                {formOption?.control?.checkboxGroup instanceof Array ? formOption?.control?.checkboxGroup.map((controlOptionItem) => (\r\n                  <ElCheckbox  {...controlOptionItem} label={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} key={controlOptionItem.label} >{controlOptionItem.label}</ElCheckbox>\r\n                )) : ''}\r\n              </ElCheckboxGroup>\r\n            )\r\n            break;\r\n          case 'checkbox-button':\r\n            return (\r\n              <ElCheckboxGroup ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]}>\r\n                {formOption?.control?.checkboxGroup instanceof Array ? formOption?.control?.checkboxGroup.map((controlOptionItem) => (\r\n                  <ElCheckboxButton  {...controlOptionItem} label={controlOptionItem.value} v-slots={{ ...controlOptionItem?.slots }} key={controlOptionItem.label} >{controlOptionItem.label}</ElCheckboxButton>\r\n                )) : ''}\r\n              </ElCheckboxGroup>\r\n            )\r\n            break;\r\n          case 'date-picker':\r\n          case 'date-time-picker':\r\n            const formatEnum = {\r\n              'datetimerange': 'YYYY-MM-DD hh:mm:ss',\r\n              'daterange': 'YYYY-MM-DD',\r\n              'datetime': 'YYYY-MM-DD hh:mm:ss',\r\n              'date': 'YYYY-MM-DD',\r\n            }\r\n            const formatEnumVal = formatEnum[formOption?.control?.type as keyof typeof formatEnum || 'date']\r\n            return <ElDatePicker ref={$refs[formOption.formItem.prop]} clearable={true} format={formatEnumVal} value-format={formatEnumVal} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} v-slots={{ ...formOption?.control?.slots }} />\r\n            break;\r\n          case 'time-picker':\r\n            return <ElTimePicker ref={$refs[formOption.formItem.prop]} clearable={true} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} />\r\n            break;\r\n          case 'switch':\r\n            return <ElSwitch ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model={_attrs.model[formOption.formItem.prop]} />\r\n            break;\r\n          case 'upload':\r\n            return (\r\n              <ElUpload ref={$refs[formOption.formItem.prop]} {...formOption?.control} v-model:file-list={_attrs.model[formOption.formItem.prop]}\r\n                v-slots={{\r\n                  default: () => _attrs.disabled ? '' : <ElButton type=\"primary\">上传文件</ElButton>,\r\n                  ...formOption?.control?.slots\r\n                }} >\r\n              </ElUpload>\r\n            )\r\n            break;\r\n          case 'slot':\r\n            if (formOption?.control?.slots?.default && typeof formOption?.control?.slots?.default === 'function') return <>{formOption.control.slots.default?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.prop] })}</>\r\n            if (slots[formOption.formItem.prop]) return slots[formOption.formItem.prop]?.({ form: _attrs.model, data: _attrs.model[formOption.formItem.prop] })\r\n            return _attrs.model[formOption.formItem.prop]\r\n            break;\r\n        }\r\n      }\r\n      function renderSearchItem() {\r\n        return (\r\n          <>\r\n            <ElButton type=\"primary\" onClick={form.submit} icon={Search}>搜索</ElButton>\r\n            <ElButton onClick={form.reset} icon={Refresh}>重置</ElButton>\r\n            {_attrs.type === 'search' && _attrs.formOption.length > (column - 1)\r\n              ? <><ElButton text type=\"primary\" class={`expandBtn ${more.value ? 'up' : 'down'}`} onClick={() => { setShow(!more.value) }} icon={ArrowUp}>{more.value ? '收起' : '展开'}</ElButton></>\r\n              : ''\r\n            }\r\n          </>\r\n        )\r\n      }\r\n      return (\r\n        renderForm()\r\n      )\r\n    }\r\n  },\r\n})", "import { ElButton, ElSteps, ElStep } from 'element-plus'\nimport { defineComponent, ref } from 'vue'\nimport type { StepsAttrs } from './type.d'\n\nexport default defineComponent({\n  name: 'StepsGenerator',\n  setup(props, { expose, attrs, slots, emit }) {\n    const _attrs = attrs as StepsAttrs\n    const activeIndex = ref(0)\n\n    function prev() {\n      if (_attrs?.onPrev && typeof _attrs?.onPrev === 'function') {\n        _attrs.onPrev(activeIndex.value, (val: number) => {\n          val\n            ? activeIndex.value = val\n            : activeIndex.value === 0\n              ? ''\n              : activeIndex.value--\n        })\n      } else {\n        activeIndex.value === 0\n          ? ''\n          : activeIndex.value--\n      }\n    }\n    function next() {\n      if (_attrs?.onNext && typeof _attrs?.onNext === 'function') {\n        _attrs.onNext(activeIndex.value, (val: number) => {\n          val\n            ? activeIndex.value = val\n            : activeIndex.value === _attrs.stepsOption.length - 1\n              ? ''\n              : activeIndex.value++\n        })\n      } else {\n        activeIndex.value === _attrs.stepsOption.length - 1\n          ? ''\n          : activeIndex.value++\n      }\n    }\n\n    expose({ prev, next })\n    return () => {\n      function renderSteps() {\n        return <div class='StepsGenerator' >\n          <ElSteps align-center {..._attrs} active={activeIndex.value}>\n            {_attrs.stepsOption.map((stepsOption) => {\n              return <ElStep {...stepsOption} v-slots={{ ...stepsOption?.slots }} />\n            })}\n          </ElSteps >\n          <div class='container'>\n            {Object.keys(slots).map((key, index) => {\n              return <div style={{ display: activeIndex.value === index ? 'block' : 'none' }}>{slots[key]()}</div>\n            })}\n          </div>\n          <div class='btn-group'>\n            {slots.default\n              ? slots.default(activeIndex.value)[0].children\n              : <>\n                {activeIndex.value > 0 ? <ElButton type=\"primary\" plain onClick={prev}>上一步</ElButton> : ''}\n                <ElButton type=\"primary\" plain onClick={next}> {activeIndex.value === _attrs.stepsOption.length - 1 ? '提交' : '下一步'}</ElButton>\n              </>\n            }\n          </div>\n        </div>\n      }\n      return (\n        renderSteps()\n      )\n    }\n  },\n})", "import type { FormItemRule } from 'element-plus'\r\nimport type { FormOption } from './type.d'\r\n\r\ntype option = {\r\n  label: string\r\n  value: string,\r\n}\r\n/**\r\n * @description: 生成表单控件使用的option\r\n * @param arr 原始list\r\n * @param label 赋值label的key名\r\n * @param value 赋值value的key名\r\n * @param custom 自定义需要合并的对象\r\n */\r\nexport const getOption = (arr: Record<string, string>[] | string[], label: string, value: string, custom?: {}): option[] => {\r\n  if (!Array.isArray(arr)) return []\r\n  const options: option[] = []\r\n  let customKeys: string[] = []\r\n  if (custom) customKeys = Object.keys(custom)\r\n  arr.forEach((item) => {\r\n    let params: option & Record<string, string> = {\r\n      label: typeof item === 'string' ? item : item[label],\r\n      value: typeof item === 'string' ? item : item[value]\r\n    }\r\n    if (custom) {\r\n      customKeys.forEach((key) => {\r\n        params[key] = (item as Record<string, string>)[key]\r\n      })\r\n    }\r\n    options.push(params)\r\n  })\r\n  return options\r\n}\r\n\r\n/**\r\n * @description: 生成校验配置\r\n * @param formOption 表单配置 formOption[]\r\n * @param omit 不需要验证的key  string[]\r\n * @return formOption\r\n */\r\nexport const setRequired = (formOption: Pick<FormOption, 'type' | 'formItem'>[], omit: string[] = []): Pick<FormOption, 'type' | 'formItem'>[] => {\r\n  const type = {\r\n    'input': '输入',\r\n    'input-number': '输入',\r\n    'select': '选择',\r\n    'tree-select': '选择',\r\n    'cascader': '选择',\r\n    'radio': '选择',\r\n    'radio-button': '选择',\r\n    'checkbox': '选择',\r\n    'checkbox-button': '选择',\r\n    'date-picker': '选择',\r\n    'date-time-picker': '选择',\r\n    'time-picker': '选择',\r\n    'switch': '选择',\r\n    'upload': '上传',\r\n    'slot': '完善',\r\n  }\r\n  formOption.forEach((i) => {\r\n    const requiredObj: FormItemRule = { required: true, message: `请${(type[i.type] ?? '完善')}${i.formItem.label ?? ''}`, trigger: 'change' }\r\n    if (!omit.includes(i.formItem.prop)) {\r\n      if (i.formItem?.rules instanceof Object) {\r\n        i.formItem.rules = [requiredObj, i.formItem.rules as FormItemRule]\r\n      } else if (Array.isArray(i.formItem?.rules)) {\r\n        (i.formItem.rules as FormItemRule[]).unshift(requiredObj)\r\n      } else {\r\n        i.formItem.rules = [requiredObj]\r\n      }\r\n      if (i.formItem?.rules instanceof Array) {\r\n        for (let index = 0; index < i.formItem.rules.length; index++) {\r\n          let item = i.formItem.rules[index]\r\n          if (!item.message) item.message = '格式有误'\r\n        }\r\n      }\r\n    }\r\n  })\r\n  return formOption\r\n}", "import TableGenerator from './TableGenerator'\nimport FormGenerator from './FormGenerator'\nimport StepsGenerator from './StepsGenerator';\nimport * as GeneratorUtils from './utils'\nimport './index.scss';\nexport {\n  TableGenerator,\n  FormGenerator,\n  StepsGenerator,\n  GeneratorUtils,\n}\n"],
  "mappings": "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",
  "names": []
}
